https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/microservice-application-layer-implementation-web-api

? Mediator 


+ AutoFac as DI?
+ One Handler per command
+ possible to remove ICommandHandler.CanHandle?
+ .Net Core
+ Decorator for commandbus
+ Logger port to be used in LoggingBehavior
+ Remove Case model from RegisterCaseCommand
+ add domain logic to set initial date and most recent date
+ Add AmendCaseCommand / FollowUpCaseCommand, should have domain logic to change dates accordingly
+ Add revision in case model, where to handle? in Persistance?
+ Add validation port and adapter to use in validationbehavior (FluentValidation?)
+ Audit
+ Behaviors on EventBus, add LoggingBehavior
+ HistoricCase

- NLog Logger adapter for Logger Port to be used in api
- Import API
- WebApp (Angular => api => core)
- PDF/Excel
- Share port
- Authentication
- Authorization
- "Authority databases"
- Idempotent commands (should only run once)
- ConnectionString from config instead of hardcoded in ConnectionStringProvider
- Tests
- What can be made internal when using autofac?
- Is CommandHandler correct place to transform from Command to domain model?
- FollowUpCaseCommandValidator - How to validate that Initial Date / Most Recent date are in expected sequence?
- Persistance model with automapping to solve DateTime issue in MongoDB?
